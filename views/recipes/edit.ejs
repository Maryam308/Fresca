<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Recipe - Fresca</title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <link rel="stylesheet" href="/stylesheets/addEditRecipe.css" />
  </head>
  <body>
    <%- include('../partials/_navbar.ejs') %>
        <!-- Hero Section -->
    <section class="hero">
      <div class="container">
        <div class="hero-content">
         <h1>Edit Recipe</h1>
        <p>Update your delicious recipe</p>
        </div>
      </div>
    </section>

    <!-- Form Container -->
    <div class="container">
      <div class="form-container">
        <form action="/recipes/<%= recipe._id %>?_method=PUT" method="POST" enctype="multipart/form-data">
          <!-- Recipe Title -->
          <div class="form-group">
            <label for="title">Recipe Title *</label>
            <input 
              type="text" 
              id="title" 
              name="title" 
              value="<%= recipe.title %>"
              placeholder="Enter a delicious recipe name"
              required 
            />
          </div>

          <!-- Cuisine Selection -->
          <div class="form-group">
            <label for="cuisineId">Cuisine Category</label>
            <select id="cuisineId" name="cuisineId">
              <option value="">-- Select Cuisine Type --</option>
              <% if (cuisines && cuisines.length > 0) { %>
                <% cuisines.forEach(cuisine => { %>
                  <option value="<%= cuisine._id %>" 
                    <%= recipe.cuisineId && recipe.cuisineId._id.toString() === cuisine._id.toString() ? 'selected' : '' %>>
                    <%= cuisine.cuisineName %>
                  </option>
                <% }) %>
              <% } %>
            </select>
          </div>

          <!-- Current Recipe Image Display -->
          <% if (recipe.recipeImage) { %>
          <div class="form-group">
            <label>Current Recipe Image</label>
            <div class="current-image-container">
              <img src="<%= recipe.recipeImage %>" alt="Current recipe image" class="current-recipe-image" />
            </div>
          </div>
          <% } %>

          <!-- Recipe Image -->
          <div class="form-group">
            <label for="recipeImage">Update Recipe Image</label>
            <input
              type="file"
              id="recipeImage"
              name="recipeImage"
              accept="image/*"
            />
            <small class="form-help">Leave empty to keep current image</small>
          </div>

          <!-- Prep and Cook Time Grid -->
          <div class="form-grid">
            <div class="form-group">
              <label for="prepTime">Prep Time (minutes) *</label>
              <input 
                type="number" 
                id="prepTime" 
                name="prepTime" 
                value="<%= recipe.prepTime %>"
                min="0" 
                placeholder="15"
                required 
              />
            </div>

            <div class="form-group">
              <label for="cookTime">Cook Time (minutes) *</label>
              <input 
                type="number" 
                id="cookTime" 
                name="cookTime" 
                value="<%= recipe.cookTime %>"
                min="0" 
                placeholder="30"
                required 
              />
            </div>
          </div>

          <!-- Ingredients Section -->
          <div class="form-group">
            <label>Ingredients *</label>
            <div id="ingredients-container" class="ingredients-container">
              <% if (recipe.ingredients && recipe.ingredients.length > 0) { %>
                <% recipe.ingredients.forEach(ingredient => { %>
                  <input
                    type="text"
                    name="ingredients[]"
                    value="<%= ingredient %>"
                    placeholder="e.g., 1 cup all-purpose flour"
                    required
                  />
                <% }) %>
              <% } else { %>
                <input
                  type="text"
                  name="ingredients[]"
                  placeholder="e.g., 1 cup all-purpose flour"
                  required
                />
              <% } %>
            </div>
            <button type="button" class="btn-add" onclick="addInput('ingredients')">
              Add another ingredient
            </button>
          </div>

          <!-- Steps Section -->
          <div class="form-group">
            <label>Cooking Steps *</label>
            <div id="steps-container" class="steps-container">
              <% if (recipe.steps && recipe.steps.length > 0) { %>
                <% recipe.steps.forEach(step => { %>
                  <textarea
                    name="steps[]"
                    placeholder="Describe the cooking step in detail..."
                    required
                  ><%= step %></textarea>
                <% }) %>
              <% } else { %>
                <textarea
                  name="steps[]"
                  placeholder="Describe the first step in detail..."
                  required
                ></textarea>
              <% } %>
            </div>
            <button type="button" class="btn-add" onclick="addInput('steps')">
              Add another step
            </button>
          </div>

          <!-- Form Actions -->
          <div class="form-actions">
            <a href="/recipes/<%= recipe._id %>" class="btn-secondary">← Cancel</a>
            <button type="submit" class="btn-submit">
              Update Recipe
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Footer -->
    <footer class="footer">
      <div class="container">
        <a href="#top" class="back-to-top">↑</a>
        <p>&copy; All rights reserved Fresca 2025</p>
      </div>
    </footer>

    <script>
      function addInput(type) {
        const container = document.getElementById(type + "-container");
        
        if (type === "ingredients") {
          const input = document.createElement("input");
          input.type = "text";
          input.name = "ingredients[]";
          input.placeholder = "e.g., 2 tablespoons olive oil";
          input.required = true;
          container.appendChild(input);
        } else if (type === "steps") {
          const textarea = document.createElement("textarea");
          textarea.name = "steps[]";
          textarea.placeholder = "Describe the next step in detail...";
          textarea.required = true;
          container.appendChild(textarea);
        }
        
        // Add animation
        const newElement = container.lastElementChild;
        newElement.style.opacity = "0";
        newElement.style.transform = "translateY(-10px)";
        
        setTimeout(() => {
          newElement.style.transition = "all 0.3s ease";
          newElement.style.opacity = "1";
          newElement.style.transform = "translateY(0)";
        }, 10);
      }

      // Add remove functionality for existing fields
      function addRemoveButtons() {
        const ingredients = document.querySelectorAll('#ingredients-container input');
        const steps = document.querySelectorAll('#steps-container textarea');
        
        // Add remove buttons to ingredients (except if only one)
        ingredients.forEach((input, index) => {
          if (ingredients.length > 1 && !input.nextElementSibling?.classList.contains('btn-remove')) {
            const removeBtn = document.createElement('button');
            removeBtn.type = 'button';
            removeBtn.className = 'btn-remove';
            removeBtn.textContent = '×';
            removeBtn.onclick = () => removeInput(input);
            input.parentNode.insertBefore(removeBtn, input.nextSibling);
          }
        });

        // Add remove buttons to steps (except if only one)
        steps.forEach((textarea, index) => {
          if (steps.length > 1 && !textarea.nextElementSibling?.classList.contains('btn-remove')) {
            const removeBtn = document.createElement('button');
            removeBtn.type = 'button';
            removeBtn.className = 'btn-remove';
            removeBtn.textContent = '×';
            removeBtn.onclick = () => removeInput(textarea);
            textarea.parentNode.insertBefore(removeBtn, textarea.nextSibling);
          }
        });
      }

      function removeInput(element) {
        const container = element.parentNode;
        const removeBtn = element.nextElementSibling;
        
        // Animate out
        element.style.transition = 'all 0.3s ease';
        element.style.opacity = '0';
        element.style.transform = 'translateX(-20px)';
        
        setTimeout(() => {
          element.remove();
          if (removeBtn && removeBtn.classList.contains('btn-remove')) {
            removeBtn.remove();
          }
          addRemoveButtons(); // Refresh remove buttons
        }, 300);
      }

      // Initialize remove buttons on page load
      document.addEventListener('DOMContentLoaded', addRemoveButtons);

      // Override the original addInput to include remove buttons
      const originalAddInput = window.addInput;
      window.addInput = function(type) {
        originalAddInput(type);
        setTimeout(addRemoveButtons, 100);
      };

      // Smooth scroll for back to top
      document.querySelector('.back-to-top').addEventListener('click', function(e) {
        e.preventDefault();
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });

      // Form validation
      document.querySelector('form').addEventListener('submit', function(e) {
        const ingredients = document.querySelectorAll('input[name="ingredients[]"]');
        const steps = document.querySelectorAll('textarea[name="steps[]"]');
        
        if (ingredients.length === 0 || steps.length === 0) {
          e.preventDefault();
          alert('Please add at least one ingredient and one cooking step.');
          return;
        }
        
        let hasEmptyFields = false;
        ingredients.forEach(input => {
          if (!input.value.trim()) hasEmptyFields = true;
        });
        steps.forEach(textarea => {
          if (!textarea.value.trim()) hasEmptyFields = true;
        });
        
        if (hasEmptyFields) {
          e.preventDefault();
          alert('Please fill in all ingredient and step fields.');
          return;
        }
      });
    </script>
  </body>
</html>